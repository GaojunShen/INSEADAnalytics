getwd()
setwd("Exercises/Exerciseset1")
getwd()
source('~/INSEAD/Study/P3/Big Data Analytics/BDA/INSEADAnalytics/Exercises/Exerciseset1/helpersSet1.R')
source('~/INSEAD/Study/P3/Big Data Analytics/BDA/INSEADAnalytics/Exercises/Exerciseset1/dataSet1.R')
round(100*sum(StockReturns[,1]),1)`%.
1. The cumulative returns of the S&P index during this period is `r round(100*sum(StockReturns[,1]),1)`%.
2. The average daily returns of the S&P index during this period is `r round(100*mean(StockReturns[,1]),3)`%;
2. The standard deviation of the daily returns of the S&P index during this period is `r round(100*sd(StockReturns[,1]),3)`%;
if (getdata.fromscratch){
# Get SPY first, to get all trading days
tmp<-as.matrix(try(getSymbols(Symbols="SPY",from = startDate,src = website_used, auto.assign=FALSE)))
StockPrices=matrix(rep(0,nrow(tmp)*length(mytickers)), ncol=length(mytickers))
colnames(StockPrices)<-mytickers;
rownames(StockPrices)<-rownames(tmp)
StockVolume=StockPrices
StockPrices[,1] <- tmp[,6]
setwd("Exercises/Exerciseset1")
getwd()
source('~/INSEAD/Study/P3/Big Data Analytics/BDA/INSEADAnalytics/Exercises/Exerciseset1/dataSet1.R')
source('~/INSEAD/Study/P3/Big Data Analytics/BDA/INSEADAnalytics/Exercises/Exerciseset1/helpersSet1.R')
write.csv(StockReturns[1:20,c("SPY","AAPL")], file = "twentydays.csv", row.names = TRUE, col.names = TRUE)
myData <- read.csv(file = "twentydays.csv", header = TRUE, sep=";")
myData
sum(myData != StockReturns[1:20,])
myData + StockReturn[1:40,]
myData + StockReturns[1:40,]
class(myData)
class(StockReturns)
getwd()
```{r echo=FALSE, comment=NA, warning=FALSE, message=FALSE,results='asis',fig.align='center', fig=TRUE}
portfolio = apply(StockReturns,1,mean)
names(portfolio) <- rownames(StockReturns)
pnl_plot(portfolio)
?library
getwd()
setwd("Exercises/Exerciseset2")
getwd()
getwd()
getwd()
setwd("Exercises/Exerciseset2")
getwd()
list.files()
source('~/INSEAD/Study/P3/Big Data Analytics/BDA/INSEADAnalytics/Exercises/Exerciseset2/helpersSet2.R')
library(googleVis)
laod("data/FuturesTrendFollowingData.Rdata")
load("data/FuturesTrendFollowingData.Rdata")
?data.frame
show_data = data.frame(colnames(futures_data))
m1 <- gvisTable(show_data, options = list(showRowNumber = TRUE, width = 1920, height = min(400, 27*(nrow(show_data) + 1)), allowHTML = TRUE, page = "disable"))
print(m1, "chart")
Variance_Explained_Table_results <- PCA(futures_data, graph = FALSE)
Variance_Explained_Table <- cbind(past("component", 1:ncol(futures_data), sep =""), Variance_Explained_Table_results$eig)
Variance_Explained_Table <- cbind(paste("component", 1:ncol(futures_data), sep =""), Variance_Explained_Table_results$eig)
Variance_Explained_Table <- as.data.frame(Variance_Explained_Table)
colnames(Variance_Explained_Table) <- c("Component", "Eigenvalue", "Percentage_of_explained_variance", "Cumulative_percentage_of_explained_variance")
eigenvalues <- Variance_Explained_Table[, 2]
corused = cor(futures_data[, apply(futures_data != 0, 2, sum) > 10, drop = F])
Rotated_Results <- principal(corused, nfactors = 20, rotate = "varimax", score = TRUE)
Rotated_Factors <- round(Rotated_Results$loadings, 2)
Rotated_Factors <- as.data.frame(unclass(Rotated_Factors))
colnames(Rotated_Factors) <- paste("Component", 1:ncol(Rotated_Factors), sep = " ")
sorted_rows <- sort(Rotated_Factors[, 1], decreasing = TRUE, index.return = TRUE)$ix
Rotated_Factors <- Rotated_Factors[sorted_rows, ]
Rotated_Factors[abs(Rotated_Factors) < 0.3] <- NA
getwd()
set("Exercises/Exerciseset2")
setwd("Exercises/Exerciseset2")
df           <- cbind(as.data.frame(eigenvalues), c(1:length(eigenvalues)), rep(1, length(eigenvalues)))
colnames(df) <- c("eigenvalues", "components", "abline")
Line         <- gvisLineChart(as.data.frame(df), xvar="components", yvar=c("eigenvalues","abline"), options=list(title='Scree plot', legend="right", width=900, height=600, hAxis="{title:'Number of Components', titleTextStyle:{color:'black'}}", vAxes="[{title:'Eigenvalues'}]",  series="[{color:'green',pointSize:3, targetAxisIndex: 0}]"))
print(Line, 'chart')
```{r echo=TRUE, eval=TRUE, comment=NA, warning=FALSE,error=FALSE, message=FALSE, prompt=FALSE, tidy=TRUE}
eigenvalues  <- Variance_Explained_Table[,2]
```
```{r Fig1, echo=FALSE, comment=NA, results='asis', message=FALSE, fig.align='center', fig=TRUE}
df           <- cbind(as.data.frame(eigenvalues), c(1:length(eigenvalues)), rep(1, length(eigenvalues)))
colnames(df) <- c("eigenvalues", "components", "abline")
Line         <- gvisLineChart(as.data.frame(df), xvar="components", yvar=c("eigenvalues","abline"), options=list(title='Scree plot', legend="right", width=900, height=600, hAxis="{title:'Number of Components', titleTextStyle:{color:'black'}}", vAxes="[{title:'Eigenvalues'}]",  series="[{color:'green',pointSize:3, targetAxisIndex: 0}]"))
print(Line, 'chart')
```
pre_crisis_data  = futures_data[as.Date(rownames(futures_data)) > "2002-11-01" & as.Date(rownames(futures_data)) < "2007-10-01",]
```{r echo=TRUE, eval=TRUE, comment=NA, warning=FALSE,error=FALSE, message=FALSE, prompt=FALSE, tidy=TRUE}
Variance_Explained_Table_results_a<-PCA(pre_crisis_data, graph=FALSE)
Variance_Explained_Table_a<-cbind(paste("component",1:ncol(pre_crisis_data),sep=" "),Variance_Explained_Table_results_a$eig)
Variance_Explained_Table_a<-as.data.frame(Variance_Explained_Table_a)
colnames(Variance_Explained_Table_a)<-c("Component","Eigenvalue", "Percentage_of_explained_variance", "Cumulative_percentage_of_explained_variance")
Variance_Explained_Table_results_a<-PCA(pre_crisis_data, graph=FALSE)
source('~/INSEAD/Study/P3/Big Data Analytics/BDA/INSEADAnalytics/Exercises/Exerciseset2/helpersSet2.R')
?pca
??pca
pre_crisis_data  = futures_data[as.Date(rownames(futures_data)) > "2002-11-01" & as.Date(rownames(futures_data)) < "2007-10-01",]
```{r echo=TRUE, eval=TRUE, comment=NA, warning=FALSE,error=FALSE, message=FALSE, prompt=FALSE, tidy=TRUE}
Variance_Explained_Table_results<-PCA(pre_crisis_data, graph=FALSE)
Variance_Explained_Table<-cbind(paste("component",1:ncol(pre_crisis_data),sep=" "),Variance_Explained_Table_results$eig)
Variance_Explained_Table<-as.data.frame(Variance_Explained_Table)
colnames(Variance_Explained_Table)<-c("Component","Eigenvalue", "Percentage_of_explained_variance", "Cumulative_percentage_of_explained_variance")
```{r echo=FALSE, comment=NA, warning=FALSE, message=FALSE, results='asis'}
show_data = data.frame(Variance_Explained_Table)
m1<-gvisTable(show_data,options=list(width=1920, height=min(400,27*(nrow(show_data)+1)),allowHTML=TRUE,page='disable'),formats=list(Eigenvalue="#.##",Percentage_of_explained_variance="#.##",Cumulative_percentage_of_explained_variance="#.##"))
print(m1,'chart')
```{r echo=TRUE, eval=TRUE, comment=NA, warning=FALSE,error=FALSE, message=FALSE, prompt=FALSE, tidy=TRUE}
eigenvalues  <- Variance_Explained_Table[,2]
```
eigenvalues  <- Variance_Explained_Table[,2]
df           <- cbind(as.data.frame(eigenvalues), c(1:length(eigenvalues)), rep(1, length(eigenvalues)))
colnames(df) <- c("eigenvalues", "components", "abline")
Line         <- gvisLineChart(as.data.frame(df), xvar="components", yvar=c("eigenvalues","abline"), options=list(title='Scree plot', legend="right", width=900, height=600, hAxis="{title:'Number of Components', titleTextStyle:{color:'black'}}", vAxes="[{title:'Eigenvalues'}]",  series="[{color:'green',pointSize:3, targetAxisIndex: 0}]"))
print(Line, 'chart')
eigenvalues  <- Variance_Explained_Table[,2]
df           <- cbind(as.data.frame(eigenvalues), c(1:length(eigenvalues)), rep(1, length(eigenvalues)))
colnames(df) <- c("eigenvalues", "components", "abline")
Line         <- gvisLineChart(as.data.frame(df), xvar="components", yvar=c("eigenvalues","abline"), options=list(title='Scree plot', legend="right", width=900, height=600, hAxis="{title:'Number of Components', titleTextStyle:{color:'black'}}", vAxes="[{title:'Eigenvalues'}]",  series="[{color:'green',pointSize:3, targetAxisIndex: 0}]"))
print(Line, 'chart')
?yvar
pre_crisis_data  = futures_data[as.Date(rownames(futures_data)) > "2002-11-01" & as.Date(rownames(futures_data)) < "2007-10-01",]
{r echo=TRUE, eval=TRUE, comment=NA, warning=FALSE,error=FALSE, message=FALSE, prompt=FALSE, tidy=TRUE}
Pre_Crisis_Variance_Explained_Table_results<-PCA(pre_crisis_data, graph=FALSE)
Pre_Crisis_Variance_Explained_Table<-cbind(paste("component",1:ncol(pre_crisis_data),sep=" "),Pre_Crisis_Variance_Explained_Table_results$eig)
Pre_Crisis_Variance_Explained_Table<-as.data.frame(Pre_Crisis_Variance_Explained_Table)
colnames(Pre_Crisis_Variance_Explained_Table)<-c("Component","Eigenvalue", "Percentage_of_explained_variance", "Cumulative_percentage_of_explained_variance")
{r echo=FALSE, comment=NA, warning=FALSE, message=FALSE, results='asis'}
Pre_Crisis_show_data = data.frame(Pre_Crisis_Variance_Explained_Table)
Pre_Crisis_m1<-gvisTable(Pre_Crisis_show_data,options=list(width=1920, height=min(400,27*(Pre_Crisis_nrow(show_data)+1)),allowHTML=TRUE,page='disable'),formats=list(Eigenvalue="#.##",Percentage_of_explained_variance="#.##",Cumulative_percentage_of_explained_variance="#.##"))
print(Pre_Crisis_m1,'chart')
{r echo=FALSE, comment=NA, warning=FALSE, message=FALSE, results='asis'}
Pre_Crisis_show_data = data.frame(Pre_Crisis_Variance_Explained_Table)
Pre_Crisis_m1<-gvisTable(Pre_Crisis_show_data,options=list(width=1920, height=min(400,27*(nrow(Pre_Crisis_show_data)+1)),allowHTML=TRUE,page='disable'),formats=list(Eigenvalue="#.##",Percentage_of_explained_variance="#.##",Cumulative_percentage_of_explained_variance="#.##"))
print(Pre_Crisis_m1,'chart')
Pre_Crisis_eigenvalues  <- Pre_Crisis_Variance_Explained_Table[,2]
r Fig2, echo=FALSE, comment=NA, results='asis', message=FALSE, fig.align='center', fig=TRUE}
Pre_Crisis_df           <- cbind(as.data.frame(Pre_Crisis_eigenvalues), c(1:length(Pre_Crisis_eigenvalues)), rep(1, length(Pre_Crisis_eigenvalues)))
colnames(Pre_Crisis_df) <- c("eigenvalues", "components", "abline")
Pre_Crisis_Line         <- gvisLineChart(as.data.frame(Pre_Crisis_df), xvar="components", Pre_Crisis_yvar=c("eigenvalues","abline"), options=list(title='Scree plot', legend="right", width=900, height=600, hAxis="{title:'Number of Components', titleTextStyle:{color:'black'}}", vAxes="[{title:'Eigenvalues'}]",  series="[{color:'green',pointSize:3, targetAxisIndex: 0}]"))
print(Pre-Crisis_Line, 'chart')
{r Fig2, echo=FALSE, comment=NA, results='asis', message=FALSE, fig.align='center', fig=TRUE}
Pre_Crisis_df           <- cbind(as.data.frame(Pre_Crisis_eigenvalues), c(1:length(Pre_Crisis_eigenvalues)), rep(1, length(Pre_Crisis_eigenvalues)))
colnames(Pre_Crisis_df) <- c("eigenvalues", "components", "abline")
Pre_Crisis_Line         <- gvisLineChart(as.data.frame(Pre_Crisis_df), xvar="components", Pre_Crisis_yvar=c("eigenvalues","abline"), options=list(title='Scree plot', legend="right", width=900, height=600, hAxis="{title:'Number of Components', titleTextStyle:{color:'black'}}", vAxes="[{title:'Eigenvalues'}]",  series="[{color:'green',pointSize:3, targetAxisIndex: 0}]"))
print(Pre_Crisis_Line, 'chart')
print(Pre_Crisis_Line, 'chart')
